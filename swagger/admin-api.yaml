openapi: 3.0.0
info:
  title: Admin Service
  description: MondiraSimonCapstone
  version: 0.0.1
servers: 
  - url: http://localhost:8282
    description: Admin web service
paths: 
  /customers:
    post:
      summary: Creates a new Admin Customer entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: A customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete Customer information. Some required fields missing.
    
    get:
      summary: get All customer Details
      responses:
        '200':
          description: Generate a customer list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
  /customer/{id}:            
    get:
      summary: get Customer Details by id
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the customer
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Generate an customer list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
        '400':
          description: Entity not found
    put:
      summary: Updated the entry for the Customer with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Customer you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: Customer successfully updated.
        '422':
          description: Customer ID on path must match the ID in the Customer object.
    
    delete:
      summary: Deletes the entry for the Customer with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Customer you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Customer successfully deleted.
          
 #--------------------------------products---------
  /products:
    post:
      summary: Creates a new Product entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: A Product object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete LevelUp information. Some required fields missing.
    
    get:
      summary: get All Product Details
      responses:
        '200':
          description: Generate a Product list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
                  
  /products/{id}:            
    get:
      summary: get Product by id
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the Product
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Generate an Product list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
        '404':
          description: Entity not Found 
  
    put:
      summary: Updated the entry for the Product with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Product you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: Product successfully updated.
        '422':
          description: Product ID on path must match the ID in the Product object.
        '404':
          description: Entity not Found
          
    delete:
      summary: Deletes the entry for the Product with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Product you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Invoice successfully deleted.
        '404':
          description: Entity not Found 
  
  #-----------------------------Level Up---------------------------------
  /levelup:
    post:
      summary: Creates a new Level Up entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: A Level Up object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete LevelUp information. Some required fields missing.
    
    get:
      summary: get All LevelUp Details
      responses:
        '200':
          description: Generate a Level Up list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
                  
  /levelup/{id}:            
    get:
      summary: get LevelUp by id
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the levelUp
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Generate a levelUp list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid request syntax.
        '404':
          description: Entity not found.
  
    put:
      summary: Updated the entry for the Level with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Level Up you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: LevelUp successfully updated.
        '422':
          description: Level Up ID on path must match the ID in the LevelUp object.
        '404':
          description: Entity not found
          
    delete:
      summary: Deletes the entry for the Level up with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Post you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Task successfully deleted.
        '404':
          description: Entity not found
  /levelUp/customer/{id}:            
    get:
      summary: get Level Up points From customer using customer id
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the customer
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Generate a level up customer object.
          content:
            application/json:
              schema:
                type: integer
                items:
                  $ref: '#/components/schemas/Admin'
        '422':
          description: Level up ID on path must match the ID in the customer object.
        '400':
          description: Entity not found 
  #-------------------------INVENTORY------------------------------
  /inventory:
    post:
      summary: Creates a new Inventory entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: An Inventory object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete LevelUp information. Some required fields missing.
    
    get:
      summary: get All Inventory Details
      responses:
        '200':
          description: Generate an Inventory list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
                  
  /Inventory/{id}:            
    get:
      summary: get Inventory by id
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the Inventory
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Generate an Inventory list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
        '404':
          description: Entity not found
   
  
    put:
      summary: Updated the entry for the Inventory with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Inventory you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: Inventorye successfully updated.
        '422':
          description: Inventory ID on path must match the ID in the Inventory object.
        '404':
          description: Entity not found  
          
    delete:
      summary: Deletes the entry for the Inventory with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Inventory you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Inventory successfully deleted.
        '404':
          description: Entity not found
  #---------------------------------INVOICE And INVOICE ITEM--------------
  /invoices:
    post:
      summary: Creates a new Invoice entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: An Invoice object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete LevelUp information. Some required fields missing.
    
    get:
      summary: get All Invoice Details
      responses:
        '200':
          description: Generate an Invoice list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
                  
  /invoices/{id}:            
    get:
      summary: get Invoice by id
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the Invoice
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Generate an Invoice list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
        '400':
          description: Entity not found
  
    put:
      summary: Updated the entry for the Invoice with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Level Up you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: Invoice successfully updated.
        '422':
          description: Invoice ID on path must match the ID in the Invoice object.
        '400':
          description: Entity not found 
          
    delete:
      summary: Deletes the entry for the Invoice up with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Invoice you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Invoice successfully deleted
        '400':
          description: Entity not found
          
  /invoices/{customerId}:            
    get:
      summary: get Invoice by customer ID
      parameters: 
        - name: customerId
          in: path
          required: true
          description: id of the customer
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Generate a Invoice list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
        '400':
          description: Entity not found  
          #--------------------------------Invoice Item---------
  /invoiceItem:
    post:
      summary: Creates a new Invoice Item entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: An Invoice Item object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete Invoice information. Some required fields missing.
    
    get:
      summary: get All Invoice Item Details
      responses:
        '200':
          description: Generate an Invoice Item list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
                  
  /invoiceItem/{id}:            
    get:
      summary: get Invoice Item by id
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the Invoice Item
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Generate an Invoice Item list JSON object.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Admin'
        '400':
          description: Entity not found
  
    put:
      summary: Updated the entry for the Invoice Item with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Invoice Item you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: Invoice Item successfully updated.
        '422':
          description: Invoice Item ID on path must match the ID in the Invoice object.
        '400':
          description: Entity not found 
          
    delete:
      summary: Deletes the entry for the Invoice Item with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: ID of the Invoice Item you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Invoice successfully deleted
        '400':
          description: Entity not found 
  
    
components:
  schemas:
    Admin:
      type: object
      properties:
        customerId:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        street:
          type: string
        city:
          type: string
        zip:
          type: string
        email:
          type: string
        phone:
          type: string
        productId:
          type: number
        productName:
          type: string
        productDescription:
          type: string
        listPrice:
          type: number
        unitCost:
          type: number
        levelupId:
          type: number
        points:
          type: number
        memberDate:
          type: string
        inventoryId:
          type: number
        quantity:
          type: number
        invoiceId:
          type: number
        purchaseDate:
          type: object # Date
        invoiceItemId:
          type: number
        unitPrice:
          type: number